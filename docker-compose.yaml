version: "3"
services:
  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    networks:
      - dev
    ports:
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver
      - "8889:8889"     # Prometheus metrics exporter

    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - dev
    ports:
      - "9090:9090"     # Prometheus web interface
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - otel-collector

  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: jaeger
    networks:
      - dev
    command: ["--collector.otlp.enabled=true", "--collector.otlp.grpc.host-port=4320", "--collector.otlp.http.host-port=4321"]
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    ports:
      - "14268:14268"  # HTTP transport, applications or agents send trace data to this endpoint over HTTP
      - "14267:14267"  # gRPC transport, applications or agents send trace data to this endpoint over gRPC
      - "14399:14399"  # JAEGER_QUERY_PORT
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # Jaeger gRPC, used for gRPC communication within Jaeger's architecture
      - "5778:5778"    # Jaeger Admin
      - "44317:4320"   # Onboard Otel Collector gRPC port
      - "44318:4321"   # Onboard Otel Collector HTTP port
    depends_on:
      - otel-collector
      - prometheus


  # Elasticsearch service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    container_name: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=logs-cluster
      - discovery.type=single-node
      - ELASTIC_PASSWORD=changeme
      - xpack.security.enabled=false
      # - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      - "9200:9200"  # HTTP
      - "9300:9300"  # Transport
    networks:
      - dev
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    depends_on:
      - otel-collector

  logstash:
    image: docker.elastic.co/logstash/logstash:8.7.0
    container_name: logstash
    networks:
      - dev
    ports:
      - "5044:5045"    # Logstash Beats input
    deploy:
      resources:
        limits:
          memory: 512M
    # environment:
    #   - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    # command: >
    #   sh -c "/usr/local/bin/docker-entrypoint -Xms256m -Xmx256m"
    volumes:
      - ./logstash_config.conf:/usr/share/logstash/config/logstash.yml
      - ./logstash_pipeline.conf/:/usr/share/logstash/pipeline/pipeline.conf  # Pipeline configurations
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.0
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - kibana-data:/usr/share/kibana/data
    networks:
      - dev

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafana  # Set the admin password
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - dev
    depends_on:
      - otel-collector
      - prometheus
      - api

  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    ports:
      - "8091:80"
    volumes:
      - heimdall-data:/config
    networks:
      - dev

  api:
    build: .
    image: aiden/api:latest  # Use the custom image name here
    container_name: aiden-api
    networks:
      - dev
    ports:
      - "8000:8000"
    depends_on:
      - otel-collector

networks:
  dev:

volumes:
  grafana-data:
  elastic-data:
  kibana-data:
  heimdall-data:
